Интерпретация вывода IndexInspector (index contents lucene)
=======================================================

1) Файлы индекса
----------------
_0.cfe, _0.si, _0.cfs, segments_1, write.lock

- Индекс состоит из одного сегмента (_0), упакованного в compound-file.
- Размер очень маленький (~0.01 MB), так как всего несколько документов.
- segments_1 — метаданные индекса.
- write.lock — системный файл блокировки.

2) Статистика сегмента
----------------------
Segment: _0, maxDoc=4, numDocs=4

Поле contents:
- hasFreqs=true, hasPositions=true, hasOffsets=true, docCount=4
- Хранятся частоты, позиции и оффсеты. Это необходимо для подсветки сниппетов.

Поле path:
- hasFreqs=false, hasPositions=false, hasOffsets=false, docCount=4
- Индексируется как keyword, чтобы идентифицировать документ, но не анализируется.

3) Постинг-лист для терма "lucene"
----------------------------------
df=4 (терм встречается в 4 документах)
ttf=4 (всего 4 вхождения, по одному на документ)

Подробности по документам:
- docID=0: позиция 16, оффсет [99,105]
- docID=1: позиция 0, оффсет [0,6]
- docID=2: позиция 20, оффсет [149,155]
- docID=3: позиция 7, оффсет [31,37]

=> Термин "lucene" встречается один раз в каждом документе. Хранятся точные позиции и диапазоны символов.

4) Предупреждение Lucene (JDK 23)
---------------------------------
"You are running with Java 22 or later..."

- Lucene работает, но не использует все оптимизации MMapDirectory.
- Для лабораторной не критично, но лучше обновить Lucene до актуальной версии.

Итог:
-----
- Индекс построен корректно (4 документа).
- Поле contents подготовлено для поиска и подсветки.
- Постинг-лист демонстрирует принцип: для каждого документа фиксируются вхождения, позиции и оффсеты.
- Отличный пример для демонстрации работы Lucene на защите.
